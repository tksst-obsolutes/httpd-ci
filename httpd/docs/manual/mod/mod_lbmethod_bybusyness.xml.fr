<?xml version="1.0"?>
<!DOCTYPE modulesynopsis SYSTEM "../style/modulesynopsis.dtd">
<?xml-stylesheet type="text/xsl" href="../style/manual.fr.xsl"?>
<!-- English Revision : 1174718 -->
<!-- French translation : Lucien GENTIS -->
<!-- Reviewed by : Vincent Deffontaines -->

<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<modulesynopsis metafile="mod_lbmethod_bybusyness.xml.meta">

<name>mod_lbmethod_bybusyness</name>
<description>Algorithme de planification avec r&eacute;partition de charge de
l'attribution des requ&ecirc;tes en attente pour le module
<module>mod_proxy_balancer</module></description>
<status>Extension</status>
<sourcefile>mod_lbmethod_bybusyness.c</sourcefile>
<identifier>lbmethod_bybusyness_module</identifier>
<compatibility>Dissoci&eacute; de <module>mod_proxy_balancer</module> depuis la
version 2.3</compatibility>

<summary>
<p>Ce module ne fournit pas lui-m&ecirc;me de directive de configuration. Il
n&eacute;cessite les services de <module>mod_proxy_balancer</module>, et
fournit la m&eacute;thode de r&eacute;partition de charge <code>bybusyness</code>.</p>
</summary>
<seealso><module>mod_proxy</module></seealso>
<seealso><module>mod_proxy_balancer</module></seealso>

<section id="busyness">

    <title>Algorithme d'attribution des requ&ecirc;tes en attente</title>

    <p>Activ&eacute; via <code>lbmethod=bybusyness</code>, ce planificateur
    surveille le nombre de requ&ecirc;tes assign&eacute;es &agrave; chaque processus worker
    &agrave; l'instant pr&eacute;sent. Une nouvelle requ&ecirc;te est automatiquement
    assign&eacute;e au processus worker auquel est assign&eacute; le plus petit nombre de
    requ&ecirc;tes. Ceci s'av&egrave;re utile dans le cas o&ugrave; les
    processus worker mettent en file d'attente les requ&ecirc;tes entrantes
    ind&eacute;pendamment d'Apache, et permet de s'assurer que la longueur des
    files reste raisonnable, et qu'une requ&ecirc;te est toujours assign&eacute;e au
    processus worker qui sera &agrave; m&ecirc;me de la servir le plus
    rapidement et avec une latence r&eacute;duite.</p>

    <p>Si plusieurs processus worker s'av&egrave;rent les moins charg&eacute;s, le
    choix d'un de ces derniers est effectu&eacute; &agrave; partir des statistiques
    (et des estimations de charges) qu'utilise la m&eacute;thode de d&eacute;compte
    des requ&ecirc;tes. Au fil du temps, la distribution des t&acirc;ches finit par
    ressembler &agrave; celle de <code>byrequests</code> (tel qu'impl&eacute;ment&eacute; par
    <module>mod_lbmethod_byrequests</module>).</p>

</section>

</modulesynopsis>
